/* This script calls the functions which calculate the
   updates from the drag portion of the surface contributions. */
load("pkpm-new/lbo-pkpm-drag-surf")$

/* ...... USER INPUTS........ */

/* Tensor product basis. 
   Kinetic variables are p=2 */
minPolyOrder_Tensor : 2$
maxPolyOrder_Tensor : 2$
minCdim_Tensor : 1$
maxCdim_Tensor : 2$

/* ...... END OF USER INPUTS........ */

for d : minCdim_Tensor thru maxCdim_Tensor do (
  for polyOrder : minPolyOrder_Tensor thru maxPolyOrder_Tensor do (
    disp(printf(false,sconcat("Creating lbo_pkpm_drag_surfvpar_~ax1v_p~a"),d,polyOrder)),
    funcName : sconcat("lbo_pkpm_drag_surfvpar_", d, "x1v_tensor_p",polyOrder),
    fname : sconcat("~/max-out/",funcName, ".c"),
    fh : openw(fname),
    printf(fh, "#include <gkyl_lbo_pkpm_kernels.h>  ~%"),
    printf(fh, "#include <gkyl_basis_tensor_~ax_p~a_surfx~a_eval_quad.h> ~%", d+1, polyOrder, d+1),
    printf(fh, "#include <gkyl_basis_tensor_~ax_p~a_upwind_quad_to_modal.h> ~%", d+1, polyOrder),
    calcVlasovPKPMLBODragSurfUpdater(fh, funcName, d, 1, polyOrder),
    close(fh) 
  )
);


