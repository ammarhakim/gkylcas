/* Generate the header file for the boundary correction in gyrokinetic LBO. */

/* ...... USER INPUTS........ */

/* Serendipity basis. */
minPolyOrder_Ser : 1$
maxPolyOrder_Ser : 2$
minCdim_Ser : 1$
maxCdim_Ser : 3$

/* Tensor product basis. */
/* Note that Serendipity, p = 1, is equivalent to Tensor */
/* Thus no need to calculate p = 1 Tensor basis */
minPolyOrder_Tensor : 2$
maxPolyOrder_Tensor : 2$
minCdim_Tensor : 1$
maxCdim_Tensor : 2$

/* ...... END OF USER INPUTS........ */

bName        : ["ser","tensor"]$
minPolyOrder : [minPolyOrder_Ser, minPolyOrder_Tensor]$
maxPolyOrder : [maxPolyOrder_Ser, maxPolyOrder_Tensor]$
minCdim      : [minCdim_Ser, minCdim_Tensor]$
minVdim      : [minVdim_Ser, minVdim_Tensor]$
maxCdim      : [maxCdim_Ser, maxCdim_Tensor]$
maxVdim      : [maxVdim_Ser, maxVdim_Tensor]$

gkVdims   : [[1,2], [2], [2]]$

printPrototypeMomBcorr(deco, ci, vi, bStr, pi) := block([],

  printf(fh, "~avoid mom_bcorr_lbo_gyrokinetic_~ax~av_~a_p~a(const int *idx, enum gkyl_vel_edge edge, const double *vBoundary, const double *dxv, double _m, const double *fIn, double* GKYL_RESTRICT out); ~%", deco, ci, vi, bStr, pi)
)$


/* ............ Write out the C header file ............ */

fh : openw("~/max-out/gkyl_mom_bcorr_lbo_gyrokinetic_kernels.h")$
printf(fh, "#pragma once~%")$
printf(fh, "#include <math.h>~%")$
printf(fh, "#include <gkyl_eqn_type.h>~%")$
printf(fh, "#include <gkyl_util.h>~%")$
printf(fh, "~%")$
printf(fh, "EXTERN_C_BEG ~%")$
printf(fh, "~%")$

decorator : "GKYL_CU_DH "$

for bInd : 1 thru length(bName) do (
  minPolyOrderB : minPolyOrder[bInd],
  maxPolyOrderB : maxPolyOrder[bInd],

  for c : minCdim[bInd] thru maxCdim[bInd] do (
    for gkV : 1 thru length(gkVdims[c]) do (
      v : gkVdims[c][gkV],

      if (c+v>4 and maxPolyOrderB > 2) then maxPolyOrderB : 2,
      for polyOrder : minPolyOrderB thru maxPolyOrderB do (
        printPrototypeMomBcorr(decorator, c, v, bName[bInd], polyOrder)
      )
    ),
    printf(fh, "~%")
  )
);

printf(fh, "EXTERN_C_END ~%")$

close(fh)$

/* ............ Finished writing out the C header file ............ */
