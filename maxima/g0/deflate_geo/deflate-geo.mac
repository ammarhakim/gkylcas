load("modal-basis")$
load(stringproc)$
load("out-scripts")$

/* Taking DG fields g_ij and |B| as inputs, this kernel will calculate the other geometric quantities
J = det(g_ij))
b_i = g_iz/sqrt(g_zz)
*/

deflateGeo(fh, basisName, polyOrder) := block(
/* powerset maxima function will give me combos*/

  disp("basisName", basisName),
  /* get the full 3d basis*/
  kill(varsC, varsP, basisC, basisP),
  [vars,basis] : loadBasis(basisName, 3, polyOrder),
  numCoeffs : length(basis),

  /* We can never rmove z*/
  varsNoZ : delete(z,vars),
  /*kill(varsC, varsP, basisC, basisP),*/
  /*[varsNoZ,basisNoz] : loadBasis(basisName, ndim, polyOrder),*/
  removeVarsList : delete([],full_listify(powerset(setify(varsNoZ)))),

  disp("list of remove vars", removeVarsList),

  for i : 1 thru length(removeVarsList) do(
    removeVars : removeVarsList[i],
    /*[vars_deflated,basis_deflated] : loadBasis(basisName, ndim, polyOrder),*/
    vars_deflated : vars,
    removeStr : "rem",
    for j : 1 thru length(removeVars) do( 
      vars_deflated : delete(removeVars[j], vars_deflated),
      removeStr : sconcat(removeStr,removeVars[j])
    ),
    ndim : length(vars_deflated),
    disp("vars_deflated: ", vars_deflated),
    disp("removeVars: ", removeVars),
    disp("Vars", vars),
    kill(varsC, varsP, basisC, basisP),
    basis_deflated : basisFromVars(basisName, vars_deflated, polyOrder) ,
    numCoeffs_deflated : length(basis_deflated),

    /* Use loadBasis functions instead of loading this old way*/
    /* Can load basis using specific variables x and z for example*/



    mkzlist(S,N) := makelist(S[i],i,0,N-1),

    fld_zl : mkzlist(fld, numCoeffs),
    fld_e : doExpand(fld_zl, basis),

    sublist : makelist(removeVars[k] = 0,k,1,length(removeVars)),
    disp("sublist", sublist),

    fld_deflated_e : subst(sublist, fld_e),
    fld_deflated_c : calcInnerProdList(vars_deflated,1,basis_deflated,fld_deflated_e),


    printf(fh, "GKYL_CU_DH void deflate_geo_~ax_~a_p~a_~a(const double *fld, double *fld_deflated) ~%{ ~%", ndim, basisName, polyOrder, removeStr),

    writeCExprs1(fld_deflated, fld_deflated_c),

    printf(fh, " ~%"),
    printf(fh, "}~%")
  )




)$
