/* Create kernels to project a Maxwellian onto the DG basis using quadrature. */
load("deflate_geo/deflate-geo.mac")$
load(stringproc)$


/* ...... USER INPUTS........ */

/* Serendipity basis. */
minPolyOrder_Ser : 1$
maxPolyOrder_Ser : 2$
minCdim_Ser : 1$
maxCdim_Ser : 2$

/* ...... END OF USER INPUTS........ */

bName        : ["Ser","Tensor"]$
minPolyOrder : [minPolyOrder_Ser, minPolyOrder_Tensor]$
maxPolyOrder : [maxPolyOrder_Ser, maxPolyOrder_Tensor]$
minCdim      : [minCdim_Ser, minCdim_Tensor]$
maxCdim      : [maxCdim_Ser, maxCdim_Tensor]$

for bInd : 1 thru 1 do (
  for cD : minCdim[bInd] thru maxCdim[bInd] do (
      for polyOrder : minPolyOrder[bInd] thru maxPolyOrder[bInd] do (
          disp(printf(false,sconcat("Creating deflate_geo_calc_",bName[bInd]," ~axp~a"),cD,polyOrder)),
          fName : sconcat("~/max-out/deflate_geo_", bName[bInd], "_", cD, "x_",  "p", polyOrder, ".c"),
          fh : openw(fName),
          printf(fh, "#include \"gkyl_deflate_geo_kernels.h\"~%~%"),
          deflateGeo(fh, cD, bName[bInd], polyOrder),
          close(fh)

      )
  )
);
