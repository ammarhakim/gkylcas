/* Constructing local cubic spline basis */

load("basis-precalc/basisSer1x")$
load("modal-basis")$

mkCubic(a) := a[0] + sum(a[i]*x^i,i,1,3)$

bt : mkCubic(a)$

eqnList : [ subst(x=-1,bt) = 1, subst(x=1,bt) = 0, subst(x=-1,diff(bt,x)) = 0, subst(x=1,diff(bt,x)) = 0 ]$
b1 : subst(linsolve(eqnList, [a[0],a[1],a[2],a[3]]), bt)$

eqnList : [ subst(x=-1,bt) = 0, subst(x=1,bt) = 1, subst(x=-1,diff(bt,x)) = 0, subst(x=1,diff(bt,x)) = 0 ]$
b2 : subst(linsolve(eqnList, [a[0],a[1],a[2],a[3]]), bt)$

eqnList : [ subst(x=-1,bt) = 0, subst(x=1,bt) = 0, subst(x=-1,diff(bt,x)) = 1, subst(x=1,diff(bt,x)) = 0 ]$
b3 : subst(linsolve(eqnList, [a[0],a[1],a[2],a[3]]), bt)$

eqnList : [ subst(x=-1,bt) = 0, subst(x=1,bt) = 0, subst(x=-1,diff(bt,x)) = 0, subst(x=1,diff(bt,x)) = 1 ]$
b4 : subst(linsolve(eqnList, [a[0],a[1],a[2],a[3]]), bt)$

wxdraw2d(grid=true,
  color=red, explicit(b1,x,-1,1),
  color=blue, explicit(b2,x,-1,1),
  color=orange, explicit(b3,x,-1,1),
  color=magenta, explicit(b4,x,-1,1)  
  )$

/* Compute projection on DG basis */
p : val[0]*b1 + val[1]*b2 + grad[0]*b3 + grad[1]*b4$
pDg : calcInnerProdList(varsC, 1, basisC[3], p)$

fh : openw("~/max-out/local-cubic-split.c")$
for i : 1 thru 4 do (
  printf(fh, "coeff[~a] = ~a; ~%", i-1, float(expand(pDg[i])))
)$
close(fh)$

/* Pass a quadratic through 3 points */
xn : [0, dx, 2*dx]$
ft : fq[0] + fq[1]*x + fq[2]*x^2$
eqnList : makelist( subst(x=xn[i],ft)=val[i], i, 1, 3)$
fquad : subst(linsolve(eqnList,[fq[0],fq[1],fq[2]]), ft)$
gradL : fullratsimp( subst(x=xn[1],diff(fquad,x)) )$
gradC : fullratsimp( subst(x=xn[2],diff(fquad,x)) )$
gradR : fullratsimp( subst(x=xn[3],diff(fquad,x)) )$
