/* Create kernels to project a Maxwellian onto the DG basis using quadrature. */
load("deflate_zsurf/deflate-zsurf.mac")$
load(stringproc)$


/* ...... USER INPUTS........ */

/* Serendipity basis. */
minPolyOrder_Ser : 1$
maxPolyOrder_Ser : 2$

/* ...... END OF USER INPUTS........ */

bName        : ["ser"]$
minPolyOrder : [minPolyOrder_Ser]$
maxPolyOrder : [maxPolyOrder_Ser]$

cD : [2, 3]$

for bInd : 1 thru length(bName) do (
  for polyOrder : minPolyOrder[bInd] thru maxPolyOrder[bInd] do (
    fName : sconcat("~/max-out/deflate_zsurf_", bName[bInd], "_", "p", polyOrder, ".c"),
    fh : openw(fName),
    printf(fh, "#include <gkyl_deflate_zsurf_kernels.h>~%~%"),
    for cInd : 1 thru length(cD) do (
      disp(printf(false,sconcat("Creating deflate_zsurf_calc_",bName[bInd]," ~axp~a"),cD[cInd],polyOrder)),
      deflatezsurf(fh, bName[bInd], polyOrder, cD[cInd])
    ),
    close(fh)
  )
);
