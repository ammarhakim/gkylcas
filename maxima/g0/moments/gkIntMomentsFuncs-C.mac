/* Functions (called by gyrokineticIntmoment.mac) that compute the
   integrated moments of the distribution function in gyrokinetic model. */

load("modal-basis");
load("out-scripts");
load(stringproc)$
fpprec : 24$

let(wx1^2, wx1_sq)$
let(wx2^2, wx2_sq)$
let(wx3^2, wx3_sq)$
let(dv1^2, dv1_sq)$
let(dv2^2, dv2_sq)$
let(dv3^2, dv3_sq)$

let(wx1^3, wx1_cu)$
let(wx2^3, wx2_cu)$
let(wx3^3, wx3_cu)$
let(dv1^3, dv1_cu)$
let(dv2^3, dv2_cu)$
let(dv3^3, dv3_cu)$

volExpr(cdim, vdim) := prod(dxv[cdim+i-1], i, 1, vdim)$
vTrans : [vpar*dv1/2+wx1, mu*dv2/2+wx2]$
wTrans : [wx1, wx2, wx3]$

calcIntMDist(fh, funcNm, cdim, vdim, basisFun, polyOrder) := block(
  [varsC,bC,varsP,bP,vSub,fl,M],

  [varsC,bC,varsP,bP,vSub] : loadGkBasis(basisFun, cdim, vdim, polyOrder),
  
  printf(fh, "GKYL_CU_DH void ~a_~ax~av_~a_p~a(const double *w, const double *dxv, const int *idx, double m_, const double *bmag, const double *f, double* GKYL_RESTRICT out) ~%{ ~%", funcNm, cdim, vdim, basisFun, polyOrder),

  if vdim = 1 then printf(fh, "  const double volFact = ~a/~a; ~%", volExpr(cdim, vdim), 2^vdim)
  else printf(fh, "  const double volFact = 2.0*M_PI/m_*~a/~a; ~%", volExpr(cdim, vdim), 2^vdim),
  for i : 1 thru vdim do (
    printf(fh, "  const double wx~a = w[~a], dv~a = dxv[~a]; ~%", i, cdim+i-1, i, cdim+i-1),
    printf(fh, "  const double wx~a_sq = wx~a*wx~a, dv~a_sq = dv~a*dv~a; ~%", i, i, i, i, i, i)
  ),

  printf(fh, " ~%"),

  f_e : doExpand1(f, bP),

  M : [],

  /* Integrated M0. */
  m0 : fullratsimp(innerProd(varsP, 1, 1, f_e)),
  M  : endcons(m0,M),

  /* Integrated parallel momentum (M0 upar). */
  m1 : fullratsimp(innerProd(varsP, 1, vTrans[1], f_e)),
  M  : endcons(m1,M),

  /* Integrated parallel particle energy (M2par). */
  m2par : fullratsimp(innerProd(varsP, 1, vTrans[1]*vTrans[1], f_e)),
  M  : endcons(m2par, M),

  if (vdim > 1) then (
    bmag_e : doExpand1(bmag, bC),

    Mtemp : calcInnerProdList(varsP, vTrans[2], bC, f_e),
    Mtemp : map(letsimp, Mtemp),

    printf(fh, "  double tmp[~a]; ~%", length(bC)),

    writeCExprs1(tmp, 2/m_*Mtemp),
    printf(fh, " ~%"),
    tmp_e : doExpand1(tmp, bC),

    m2perp : fullratsimp(innerProd(varsC, 1, bmag_e, tmp_e)),
    M  : endcons(m2perp, M)
  ),

  M : map(letsimp, M),
  clst : [volFact],
  writeCIncrExprsCollect1(out, volFact*M, clst),

  printf(fh, "} ~%")
)$

calcIntMoments(fh, funcNm, cdim, vdim, basisFun, polyOrder) := block([],
  printf(fh, "#include <gkyl_mom_gyrokinetic_kernels.h> ~%"),
  calcIntMDist(fh, funcNm, cdim, vdim, basisFun, polyOrder)
)$