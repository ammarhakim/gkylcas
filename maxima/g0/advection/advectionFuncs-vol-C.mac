/* Compute the volume term for scalar advection equation df/dt + div(u f) = 0. */

load("modal-basis");
load("out-scripts");
load(stringproc)$
fpprec : 24$

cidx(cdim) := makelist(i,i,0,cdim-1)$

calcAdvectionVolUpdater(fh, funcNm, cdim, basisFun, polyOrder) := block(
  [bP,NC,cflPt,cid,dir,rdx2,u_e,f_e,volTerm,amid],

  kill(varsC, basisC),

  load(sconcat("basis-precalc/basis", basisFun, cdim, "x")),

  printf(fh, "#include <gkyl_advection_kernels.h> ~%"),

  bC : basisC[polyOrder],
  NC : length(bC),

  /* specify a point to evaluate alpha at for use in computing CFL */
  cflPt : makelist(varsC[d]=0, d, 1, length(varsC)),

  printf(fh, "GKYL_CU_DH double ~a_p~a(const double *w, const double *dxv, const double *u, const double *f, double* GKYL_RESTRICT out) ~%{ ~%", funcNm, polyOrder),
  printf(fh, "  // w[NDIM]:   Cell-center coordinates.~%"),
  printf(fh, "  // dxv[NDIM]: Cell spacing.~%"),
  printf(fh, "  // u[NDIM]:   Advection velocity.~%"),
  printf(fh, "  // f:         Input function.~%"),
  printf(fh, "  // out:       Incremented output.~%"),
  cid : cidx(cdim),
  for dir : 1 thru cdim do (
      printf(fh, "  const double rd~a2 = 2.0/dxv[~a]; ~%", varsC[dir], cid[dir])
  ),
  rdx2 : [rdx2, rdy2, rdz2],

  /* cflFreq_mid is our approximation of sum_i max(abs(alpha_i))/(dx_i/(2p+1)) */
  printf(fh, "  double cflFreq_mid = 0.0; ~%"),

  /* Advection velocity in each direction of configuration space. */
  u_e : doExpand1(u, bC),
  /* To allow for multiple components change the cofficient indices in u. */
  u_e : psubst(makelist(u[i]=u[a0+i],i,0,NC-1),u_e),
  /* Expand distribution function in phase basis. */
  f_e : doExpand1(f, bC),

  /* Inner product of grad(psi) . u f, where psi is a basis function. */
  volTerm : 0,
  for dir : 1 thru cdim do (
    /* evaluate alpha_vdim at cflPt to approximate
    ** max(abs(alpha_vdim))/(dx_i/(2p+1)). */
    amid : gcfac(float(expand(subst(cflPt,(2*polyOrder+1)*0.5*subst(a0=NC*(dir-1),u_e))))),
    printf(fh, "  cflFreq_mid += fabs(~a); ~%", rdx2[dir]*amid),

    volTerm : volTerm + subst(a0=NC*(dir-1),calcInnerProdList(varsC, rdx2[dir]*u_e, diff(bC,varsC[dir]), f_e))
  ),
  printf(fh, "~%"),

  writeCExprsCollect1c(volTerm),
  printf(fh, "~%"),

  printf(fh, "  return cflFreq_mid; ~%"),
  printf(fh, "} ~%")
)$
