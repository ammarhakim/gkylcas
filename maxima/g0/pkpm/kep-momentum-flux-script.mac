cdim : 1$

load("modal-basis")$
[varsC,bC] : loadBasis("Tensor", cdim, 1)$
[varsC,bC_p2] : loadBasis("Tensor", cdim, 2)$
NC : length(bC)$
NC_p2 : length(bC_p2)$

/* mass density and flow on left and right */
rhol_e : doExpand1(rho_l, bC_p2)$
ul_e : doExpand1(u_l, bC)$

rhor_e : doExpand1(rho_r, bC_p2)$
ur_e : doExpand1(u_r, bC)$

uSql_c : calcInnerProdList(varsC, 1, bC_p2, ul_e*ul_e)$
uSqr_c : calcInnerProdList(varsC, 1, bC_p2, ur_e*ur_e)$

uSql_e : uSql_c[1]*bC_p2[1] + uSql_c[2]*bC_p2[2] + uSql_c[3]*bC_p2[3]$
uSqr_e : uSqr_c[1]*bC_p2[1] + uSqr_c[2]*bC_p2[2] + uSqr_c[3]*bC_p2[3]$

rho_lr : subst(x=1, rhol_e)$
rho_rl : subst(x=-1, rhor_e)$
u_lr : subst(x=1, ul_e)$
u_rl : subst(x=-1, ur_e)$
uSq_lr : subst(x=1, uSql_e)$
uSq_rl : subst(x=-1, uSqr_e)$

mass_flux_l_vol_e : rhol_e*ul_e$
mass_flux_r_vol_e : rhor_e*ur_e$

momentum_flux_1l_vol_e : mass_flux_l_vol_e*ul_e$
momentum_flux_1l_vol_c : calcInnerProdList(varsC, 1, diff(bC, x), mass_flux_l_vol_e*ul_e)$

print(momentum_flux_1l_vol_c)$

surfVars : delete(x, varsC)$
strong_momentum_flux_1l_surf_c : calcInnerProdList(surfVars, 1, subst(x=1, bC), subst(x=1, mass_flux_l_vol_e*ul_e))$
strong_momentum_flux_1l_vol_c : calcInnerProdList(varsC, 1, bC, diff(mass_flux_l_vol_e*ul_e, x))$

print(fullratsimp(strong_momentum_flux_1l_vol_c - strong_momentum_flux_1l_surf_c))$

/* Check that volume term cancels */
ke_flux_1l_vol_c : calcInnerProdList(varsC, 1, [1], mass_flux_l_vol_e*ul_e*diff(ul_e,x))$
ke_flux_2l_vol_c : calcInnerProdList(varsC, 1, [1], mass_flux_l_vol_e*diff(uSql_e/2,x))$
print(fullratsimp(ke_flux_1l_vol_c - ke_flux_2l_vol_c))$

rho_flux : 0.5*(rho_lr + rho_rl)*0.5*(u_lr + u_rl) - lambda/2.0*(rho_rl - rho_lr)$ 

/* Check that surface term cancels */
test_u2_rho_surf_l : calcInnerProdList(surfVars, 1, [1], 0.5*uSq_lr*rho_flux)$
test_u2_rho_surf_r : calcInnerProdList(surfVars, -1, [1], 0.5*uSq_rl*rho_flux)$

test_u_momentum_surf_l : calcInnerProdList(surfVars, 1, [1], u_lr*rho_flux*0.5*(u_lr + u_rl))$
test_u_momentum_surf_r : calcInnerProdList(surfVars, -1, [1], u_rl*rho_flux*0.5*(u_lr + u_rl))$

print(fullratsimp(test_u_momentum_surf_l + test_u_momentum_surf_r - (test_u2_rho_surf_l + test_u2_rho_surf_r)))$

/* Check that rhou = rho*u (i.e., that the process is invertible) */
rhoul_c : calcInnerProdList(varsC, 1, bC, rhol_e*ul_e)$
rhour_c : calcInnerProdList(varsC, 1, bC, rhor_e*ur_e)$

eq : calcInnerProdList(varsC,ul_e,bC,rhol_e)$
ul_c : makelist(u_l[i],i,0,NC-1)$
E  : fullratsimp(coefmatrix(eq,ul_c))$
det_E : determinant(E)$
inv_E : invert(E)$

ul_div_1 : inv_E[1,1]*rhoul_c[1] + inv_E[1,2]*rhoul_c[2]$
ul_div_2 : inv_E[2,1]*rhoul_c[1] + inv_E[2,2]*rhoul_c[2]$

print(fullratsimp(ul_div_1))$
print(fullratsimp(ul_div_2))$