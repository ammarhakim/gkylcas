load("prim_vars/primVarsFuncs")$
load(stringproc)$
/*  Generate kernels for: 
    1. Vlasov prim_vars: udrift = M1/M0, vtSq = 1/vdim*(M2/M0 - udrift.udrift)
    2. GK prim_vars: upar = M1/M0, vtSq = 1/vdim*(M2/M0 - upar^2), where vdim = 1 or 3. */

/* ...... USER INPUTS........ */

/* Serendipity basis. */
minPolyOrder_Ser : 1$
maxPolyOrder_Ser : 1$
minCdim_Ser : 1$
maxCdim_Ser : 3$
minVdim_Ser : 1$
maxVdim_Ser : 3$

/* ...... END OF USER INPUTS........ */

bName        : ["ser"]$
minPolyOrder : [minPolyOrder_Ser]$
maxPolyOrder : [maxPolyOrder_Ser]$
minCdim      : [minCdim_Ser]$
maxCdim      : [maxCdim_Ser]$
minVdim      : [minVdim_Ser]$
maxVdim      : [maxVdim_Ser]$

polyOrder : 1$
for bInd : 1 thru length(bName) do (
  for c : minCdim[bInd] thru maxCdim[bInd] do (
    for v : c thru maxVdim[bInd] do (
      if (c=3 and maxPolyOrderB > 1) then maxPolyOrderB : 1,
      fname : sconcat("~/max-out/vlasov_prim_vars_", c, "x", v, "v_", bName[bInd], "_p", polyOrder, ".c"),
      fh : openw(fname),
      funcName : sconcat("vlasov_prim_vars_", c, "x", v,  "v_", bName[bInd], "_p", polyOrder),
      calcPrimVarsVlasov(fh, funcName, c, v, bName[bInd], polyOrder),
      close(fh),

      fname : sconcat("~/max-out/vlasov_prim_vars_u_i_", c, "x", v, "v_", bName[bInd], "_p", polyOrder, ".c"),
      fh : openw(fname),
      funcName : sconcat("vlasov_prim_vars_u_i_", c, "x", v,  "v_", bName[bInd], "_p", polyOrder),
      calcPrimVarsUVlasov(fh, funcName, c, v, bName[bInd], polyOrder),
      close(fh),

      fname : sconcat("~/max-out/vlasov_prim_vars_vtSq_", c, "x", v, "v_", bName[bInd], "_p", polyOrder, ".c"),
      fh : openw(fname),
      funcName : sconcat("vlasov_prim_vars_vtSq_", c, "x", v,  "v_", bName[bInd], "_p", polyOrder),
      calcPrimVarsVt2Vlasov(fh, funcName, c, v, bName[bInd], polyOrder),
      close(fh),

      fname : sconcat("~/max-out/transform_vlasov_gk_prim_vars_", c, "x", v, "v_", bName[bInd], "_p", polyOrder, ".c"),	
      fh : openw(fname),
      funcName : sconcat("transform_vlasov_gk_prim_vars_", c, "x", v,  "v_", bName[bInd], "_p", polyOrder),
      calcPrimVarsVlasovToGK(fh, funcName, c, v, bName[bInd], polyOrder),
      close(fh),

      fname : sconcat("~/max-out/transform_vlasov_gk_prim_vars_u_par_", c, "x", v, "v_", bName[bInd], "_p", polyOrder, ".c"),	
      fh : openw(fname),
      funcName : sconcat("transform_vlasov_gk_prim_vars_u_par_", c, "x", v,  "v_", bName[bInd], "_p", polyOrder),
      calcPrimVarsUparVlasovToGK(fh, funcName, c, v, bName[bInd], polyOrder),
      close(fh),

      fname : sconcat("~/max-out/transform_vlasov_gk_prim_vars_u_par_i_", c, "x", v, "v_", bName[bInd], "_p", polyOrder, ".c"),	
      fh : openw(fname),
      funcName : sconcat("transform_vlasov_gk_prim_vars_u_par_i_", c, "x", v,  "v_", bName[bInd], "_p", polyOrder),
      calcPrimVarsUGkToVlasov(fh, funcName, c, v, bName[bInd], polyOrder),
      close(fh)
    ),
    if (c=1) then (
      fname : sconcat("~/max-out/gyrokinetic_prim_vars_", c, "x", 1, "v_", bName[bInd], "_p", polyOrder, ".c"),
      fh : openw(fname),
      funcName : sconcat("gyrokinetic_prim_vars_", c, "x", 1,  "v_", bName[bInd], "_p", polyOrder),
      calcPrimVarsGK(fh, funcName, c, 1, bName[bInd], polyOrder),
      close(fh),

      fname : sconcat("~/max-out/gyrokinetic_prim_vars_upar_", c, "x", 1, "v_", bName[bInd], "_p", polyOrder, ".c"),
      fh : openw(fname),
      funcName : sconcat("gyrokinetic_prim_vars_upar_", c, "x", 1,  "v_", bName[bInd], "_p", polyOrder),
      calcPrimVarsUGK(fh, funcName, c, 1, bName[bInd], polyOrder),
      close(fh),

      fname : sconcat("~/max-out/gyrokinetic_prim_vars_vtSq_", c, "x", 1, "v_", bName[bInd], "_p", polyOrder, ".c"),
      fh : openw(fname),
      funcName : sconcat("gyrokinetic_prim_vars_vtSq_", c, "x", 1,  "v_", bName[bInd], "_p", polyOrder),
      calcPrimVarsVt2GK(fh, funcName, c, 1, bName[bInd], polyOrder),
      close(fh)
    ),
    fname : sconcat("~/max-out/gyrokinetic_prim_vars_", c, "x", 2, "v_", bName[bInd], "_p", polyOrder, ".c"),
    fh : openw(fname),
    funcName : sconcat("gyrokinetic_prim_vars_", c, "x", 2,  "v_", bName[bInd], "_p", polyOrder),
    calcPrimVarsGK(fh, funcName, c, 2, bName[bInd], polyOrder),
    close(fh),

    fname : sconcat("~/max-out/gyrokinetic_prim_vars_upar_", c, "x", 2, "v_", bName[bInd], "_p", polyOrder, ".c"),
    fh : openw(fname),
    funcName : sconcat("gyrokinetic_prim_vars_upar_", c, "x", 2,  "v_", bName[bInd], "_p", polyOrder),
    calcPrimVarsUGK(fh, funcName, c, 2, bName[bInd], polyOrder),
    close(fh),

    fname : sconcat("~/max-out/gyrokinetic_prim_vars_vtSq_", c, "x", 2, "v_", bName[bInd], "_p", polyOrder, ".c"),
    fh : openw(fname),
    funcName : sconcat("gyrokinetic_prim_vars_vtSq_", c, "x", 2,  "v_", bName[bInd], "_p", polyOrder),
    calcPrimVarsVt2GK(fh, funcName, c, 2, bName[bInd], polyOrder),
    close(fh)
  )
);

/* gkyl_dg_prim_vars_kernels.h */