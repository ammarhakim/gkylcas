load(stringproc)$
load("bvp_utilities/bvp-util");
load("fem/fem-util");
/* ...... USER INPUTS........ */

/* Serendipity basis. */
minPolyOrder_Ser : 1$
maxPolyOrder_Ser : 1$
minCdim_Ser : 3$
maxCdim_Ser : 3$

/* ...... END OF USER INPUTS........ */

bName        : ["Ser","Tensor"]$
minPolyOrder : [minPolyOrder_Ser, minPolyOrder_Tensor]$
maxPolyOrder : [maxPolyOrder_Ser, maxPolyOrder_Tensor]$
minCdim      : [minCdim_Ser, minCdim_Tensor]$
maxCdim      : [maxCdim_Ser, maxCdim_Tensor]$


fName : "~/max-out/gkyl_calc_metric_kernels.h"$
fh : openw(fName)$
printf(fh, "#pragma once ~%")$
printf(fh, "#include <math.h> ~%")$
printf(fh, "#include <gkyl_util.h> ~%")$
printf(fh, "EXTERN_C_BEG ~%")$
printf(fh, "~%")$

sloc_namelist : ["lo", "in", "up"],

for bInd : 1 thru 1 do (
  for cD : minCdim[bInd] thru maxCdim[bInd] do (
      stencilLocs : getStencilCoords(cD),
      for polyOrder : minPolyOrder[bInd] thru maxPolyOrder[bInd] do (
          disp(printf(false,sconcat("Creating header entry for gij_",bName[bInd]," ~axp~a"),cD,polyOrder)),
          for sI : 1 thru length(stencilLocs) do(
            stencilLoc : stencilLocs[sI],
            bcTypes : [0, 1],
            bcStrs  : ["periodic", "nonperiodic"],
            bcKey   : makelist([bcTypes[i],bcStrs[i]],i,1,length(bcTypes)),

            bcCombos : [[0]],
            if stencilLoc[1] # 0 then ( bcCombos : makelist([bcTypes[i]],i,1,length(bcTypes)) ),
            for d : 2 thru cD do (
              bcsInDir : [[0]],
              if stencilLoc[d] # 0 then ( bcsInDir : makelist([bcTypes[i]],i,1,length(bcTypes)) ),
              bcCombos : listify(cartesian_product(setify(bcCombos),setify(bcsInDir))),
              for i : 1 thru length(bcCombos) do ( bcCombos[i] : flatten(bcCombos[i]) )
            ),
            for bcI : 1 thru length(bcCombos) do (
              currBC : copylist(bcCombos[bcI]),

              stencilStr : "",
              for d : 1 thru cD do (
                stencilStr : sconcat(stencilStr,"_",assoc(stencilLoc[d],[[-1,"lo"],[0,"in"],[1,"up"]]),
                             assoc(stencilLoc[d],coordVarS)[d],"_",assoc(currBC[d],bcKey),string(varsC[d]))
              ),

              printf(fh, "GKYL_CU_DH void gij_~ax_~a_p~a~a( const double **xyz, double *gij); ~%", cD, bName[bInd], polyOrder, stencilStr)
            )
          )

      )
  )
);

printf(fh, "EXTERN_C_END ~%")$
close(fh)$
