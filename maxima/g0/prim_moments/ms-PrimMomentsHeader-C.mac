polyOrderMin : 1$
polyOrderMax : 2$

fh : openw("~/max-out/gkyl_prim_lbo_vlasov_kernels.h")$

printf(fh, "#pragma once ~%")$
printf(fh, "#include <math.h> ~%")$
printf(fh, "#include <gkyl_mat.h> ~%")$
printf(fh, "#include <gkyl_util.h> ~%")$
printf(fh, " ~%")$
printf(fh, "EXTERN_C_BEG ~%")$
printf(fh, " ~%")$
printf(fh, "GKYL_CU_DH void prim_lbo_copy_sol(const struct gkyl_mat *rhs, const int nc, const int vdim, double* GKYL_RESTRICT u, double* GKYL_RESTRICT vtSq); ~%")$
printf(fh, " ~%")$

bName   : ["ser"]$

for bInd : 1 thru length(bName) do (

  for pi : polyOrderMin thru polyOrderMax do (
    for ci : 1 thru 3 do (

      /* Vlasov-Maxwell. */
      for vi : ci thru 3 do (
        /* Primitive moments for self-collision terms with p>1. */
        printf(fh, "GKYL_CU_DH void vlasov_self_prim_moments_~ax~av_~a_p~a(struct gkyl_mat *A, struct gkyl_mat *rhs,~%  const double *moms, const double *boundary_corrections); ~%", ci, vi, bName[bInd], pi),

        /* Primitive moments for cross-collision Vlasov LBO terms. */
        printf(fh, "GKYL_CU_DH void vlasov_cross_prim_moments_~ax~av_~a_p~a(struct gkyl_mat *A, struct gkyl_mat *rhs, const double *greeneFac, const double m_self,~%  const double *u_self, const double *vtsq_self, const double m_other, const double *u_other,~%  const double *vtsq_other, const double *nu, const double *moms, const double *boundary_corrections); ~%", ci, vi, bName[bInd], pi),

        /* Vlasov parallel kinetic with perp fluid model. */
        printf(fh, "GKYL_CU_DH void vlasov_with_fluid_self_prim_moments_~ax~av_~a_p~a(struct gkyl_mat *A, struct gkyl_mat *rhs, const double *moms, const double *fluid, const double *boundary_corrections); ~%", ci, vi, bName[bInd], pi),
        printf(fh, "GKYL_CU_DH void vlasov_with_fluid_cross_prim_moments_~ax~av_~a_p~a(struct gkyl_mat *A, struct gkyl_mat *rhs, const double *greene, const double m_self, const double *u_self, const double *vtsq_self, const double m_other, const double *u_other, const double *vtsq_other, const double *moms, const double *fluid, const double *boundary_corrections); ~%", ci, vi, bName[bInd], pi),

        printf(fh, "~%")
      )
    ),
    printf(fh, "~%")
  )
);

printf(fh, "EXTERN_C_END ~%")$

close(fh)$


