kill(all)$
load("dg_diffusion_fluid/diffFuncs-fluid-surf")$

/* ...... USER INPUTS........ */

/* Serendipity basis. */
minPolyOrder_Ser : 1$
maxPolyOrder_Ser : 2$
minCdim_Ser : 1$
maxCdim_Ser : 3$

/* Tensor order basis. No need to generate p=1. */
minPolyOrder_Tensor : 2$
maxPolyOrder_Tensor : 2$
minCdim_Tensor : 1$
maxCdim_Tensor : 0$

/* ...... END OF USER INPUTS........ */

/* To generate other bases, just add corresponding column to arrays below. */
bName        : ["ser", "tensor"]$
minPolyOrder : [minPolyOrder_Ser, minPolyOrder_Tensor]$
maxPolyOrder : [maxPolyOrder_Ser, maxPolyOrder_Tensor]$
minCdim      : [minCdim_Ser     , minCdim_Tensor     ]$
maxCdim      : [maxCdim_Ser     , maxCdim_Tensor     ]$
dirVars      : [x,y,z]$

for bInd : 1 thru length(bName) do (
  for polyOrder : minPolyOrder[bInd] thru maxPolyOrder[bInd] do (
    for cdim : minCdim[bInd] thru maxCdim[bInd] do (
      for dir : 1 thru cdim do (
        dirVar : dirVars[dir], 
        fname : sconcat("~/max-out/dg_diffusion_fluid_order2_surf", dirVar,"_", cdim, "x_", bName[bInd], "_p", polyOrder, ".c"),
        funcName : sconcat("dg_diffusion_fluid_order2_surf", dirVar,"_", cdim, "x_", bName[bInd], "_p", polyOrder),
        fh : openw(fname),
        print("Generating:", fname),
        genDGdiffFluidKernelSurf(fh, funcName, cdim, bName[bInd], polyOrder,  dir, 2),
        close(fh),

        fname : sconcat("~/max-out/dg_diffusion_fluid_order4_surf", dirVar,"_", cdim, "x_", bName[bInd], "_p", polyOrder, ".c"),
        funcName : sconcat("dg_diffusion_fluid_order4_surf", dirVar,"_", cdim, "x_", bName[bInd], "_p", polyOrder),
        fh : openw(fname),
        print("Generating:", fname),
        genDGdiffFluidKernelSurf(fh, funcName, cdim, bName[bInd], polyOrder,  dir, 4),
        close(fh),

        if polyOrder > 1 then (
          fname : sconcat("~/max-out/dg_diffusion_fluid_order6_surf", dirVar,"_", cdim, "x_", bName[bInd], "_p", polyOrder, ".c"),
          funcName : sconcat("dg_diffusion_fluid_order6_surf", dirVar,"_", cdim, "x_", bName[bInd], "_p", polyOrder),
          fh : openw(fname),
          print("Generating:", fname),
          genDGdiffFluidKernelSurf(fh, funcName, cdim, bName[bInd], polyOrder,  dir, 6),
          close(fh)
        )
      )
    )
  )
)$
