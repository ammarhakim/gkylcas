/*
  Generate the kernels for computing Bstar/Bmag
  NOTE: BECAUSE Bstar/Bmag IS A HIGHER ORDER QUANTITY, THIS PRE-PROJECTION CAN CREATE
  ISSUES OF LACK OF CONTINUITY IN THE CONSTRUCTION OF THE SURFACE PHASE SPACE FLUX
  OF ALPHA, THEREFORE WE DO NOT CURRENTLY USE THIS. THIS MAY STILL BE USEFUL *LATER*
  FOR VOLUME KERNELS, BUT IT CANNOT BE USED WITH SURFACE KERNELS.

  The functions called in this file are in gkFuncs-Bstar-Bmag.mac.
*/
load("gyrokinetic/gkFuncs-Bstar-Bmag")$

/* ...... USER INPUTS........ */

/* Serendipity basis. */
minPolyOrder_Ser : 1$
maxPolyOrder_Ser : 2$
minCdim_Ser : 1$
maxCdim_Ser : 3$

/* Tensor order basis. No need to generate p=1. */
minPolyOrder_Tensor : 2$
maxPolyOrder_Tensor : 2$
minCdim_Tensor : 1$
maxCdim_Tensor : 0$

/* ...... END OF USER INPUTS........ */

/* To generate other bases, just add corresponding column to arrays below. */
bName        : ["ser", "tensor"]$
minPolyOrder : [minPolyOrder_Ser, minPolyOrder_Tensor]$
maxPolyOrder : [maxPolyOrder_Ser, maxPolyOrder_Tensor]$
minCdim      : [minCdim_Ser, minCdim_Tensor]$
maxCdim      : [maxCdim_Ser, maxCdim_Tensor]$

/* Possible combinations of variable dependence of background magnetic field.
   with [] = const. Note that we assume axisymmetry, which means B cannot depend on y. */
bVarsList : [x,z]$

/* Generate kernels of selected types. */
for bInd : 1 thru length(bName) do (
  for c : minCdim[bInd] thru maxCdim[bInd] do (
    maxPolyOrderB : maxPolyOrder[bInd],
    if (c=3 and maxPolyOrderB > 2) then maxPolyOrderB : 2,

    for polyOrder : minPolyOrder[bInd] thru maxPolyOrderB do (
      fname : sconcat("~/max-out/gyrokinetic_Bstar_Bmag_", c, "x_", bName[bInd], "_p", polyOrder, ".c"),
      disp(printf(false,"Creating B*/Bmag file: ~a",fname)),

      fh : openw(fname),
      printf(fh, "#include <gkyl_gyrokinetic_kernels.h> ~%"),

      funcName : sconcat("gyrokinetic_Bstar_Bmag_", c, "x_", bName[bInd], "_p", polyOrder),
      /* Bstar/Bmag only depends on (x,y,z,vpar) so vdim = 1 */
      buildGKBStarBMagKernel(fh, funcName, c, bName[bInd], polyOrder, bVarsList),
      close(fh)
    )
  )
)$
